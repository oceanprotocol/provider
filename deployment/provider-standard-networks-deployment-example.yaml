apiVersion: apps
kind: Deployment
metadata:
  labels:
    app: provider
  name: provider
spec:
  progressDeadlineSeconds: 60
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: provider
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: provider
    spec:
      containers:
        - env:
            - name: NETWORK_URL
              value: < mainnet, rinkeby, ropsten or custom Openethereum service >
            - name: PROVIDER_PRIVATE_KEY
              value: < private key>
            - name: LOG_LEVEL
              value: INFO
            - name: OCEAN_PROVIDER_URL
              value: http://0.0.0.0:8030
            - name: OCEAN_PROVIDER_WORKERS
              value: "1"
            - name: IPFS_GATEWAY
              value: < IPFS gateway if defined/available >
            - name: OCEAN_PROVIDER_TIMEOUT
              value: "9000"
            - name: AQUARIUS_URL
              value: < http://aquarius_url >
          image: oceanprotocol/provider-py:<check tag on hub.docker.com >
          imagePullPolicy: IfNotPresent
          name: provider
          ports:
            - containerPort: 8030
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
